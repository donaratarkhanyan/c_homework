1. grel cragir structov vory mutqagrum e usanoxi anun azganun ID ev gnahatakan u cacr gnahatakanov usanoxi anuny tpum ekranin.
#include <iostream>
#include <cstring>

struct mard{
    std::string anun;
    std::string azganun;
    int id;
    int mark;
};

int main(){
    int member = 0;
    std::cout << "Enter the students member: ";
    std::cin >> member;

    mard* m_arr = new mard [member];
    for(int i = 0; i < member; ++i){
        std::cout << "Anun: ";
        std::cin >> m_arr[i].anun;
        std::cout << "Azganun: ";
        std::cin >> m_arr[i].azganun;
        std::cout << "ID number: ";
        std::cin >> m_arr[i].id;
        std::cout << "Mark: ";
        std::cin >> m_arr[i].mark;
    }
    for(int i = 0; i < m_arr[i].mark; ++i){
            if(m_arr[i].mark < 5){
                std::cout <<"Anun: "<<  m_arr[i].anun
                << "\nAzganun: " << m_arr[i].azganun
                << "\nID number: " << m_arr[i].id;
                std::cout << std::endl;
            }           
    }

}


2.Բազմապատկեք երկու զանգվածների համապատասխան տարրերը և տպեք արդյունքները:
#include <stdio.h>
#include <stdlib.h>
void scan(int* arr, int size){
    for(int i = 0; i < size; ++i){
    printf(“Enter array element: “);
    scanf(“%d”,arr + i);
    }
}
int main()
{
    int size = 0;
    printf(“Enter the size: “);
    scanf(“%d”,&size);
    int* arr = (int*)calloc(size,sizeof(int));
    int* arr1 = (int*)calloc(size, sizeof(int));
    printf(“Enter frist array!\n”);
    scan(arr, size);
    printf(“Enter secnd array!\n”);
    scan(arr1, size);
    for(int i = 0; i < size; ++i){
        printf(“%d * %d = %d\n”,arr[i],arr1[i], arr[i] * arr1[i]);
    }
    free(arr);
    free(arr1);
    return 0;
}


3.Stexcel diynamic matrix ev jnjel 
#include <stdio.h>
#include <stdlib.h>
int main()
{
   int n = 0;
   printf(“n = “);
   scanf(“%d”, &n);
   int** mat = (int**)calloc(n, sizeof(int*));
   for(int i = 0; i < n; ++i){
      mat[i] = (int*)calloc(n, sizeof(int));
   }
   for(int i = 0; i < n; ++i){
       for(int j = 0; j < n; ++j){
           mat[i][j] = rand()%10;
       }
    }5;
   for(int i = 0; i < n; ++i){
       for(int j = 0; j < n; ++j){
           printf(“%d  “,mat[i][j]);
       }
       printf(“\n”);
    }
   for(int i = 0; i < n; ++i){
      free(mat[i]);
   }
   free(mat);
    return 0;
}

4.
