1) Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները, և տպել դրանցից առավելագույնի արժեքը:
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int max = arr[0];
    for (int i = 0; i < size; ++i) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    std::cout << max;
    return 0;
}
2)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները և տպում է առավելագույն արժեքով էլեմենտի ինդեքսը։
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int max = arr[0];
    for (int i = 0; i < size; ++i) {
        if (arr[i] > max) {
            max = arr[i];
            std::cout << "Max element index: " << i;
        }
    }
    return 0;
}
3)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները և տպում է էկրանին նվազագույնի արժեքը:
#include <iostream>

int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int min = arr[0];
    for (int i = 0; i < size; ++i) {
        if (arr[i] < min){
            min = arr[i];
        }
    }
    std::cout << min;
    return 0;
}
4)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները և տպում է նվազագույն արժեքով էլեմենտի ինդեքսը։
#include <iostream>

int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int min = arr[0];
    for (int i = 0; i < size; ++i) {
        if (arr[i] < min){
            min = arr[i];
            std::cout << "Min element index: " << i;
        }
    }
    
    return 0;
}
5)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները և տպում է նվազագույն և առավելագույն արժեքներով էլեմենտների գումարը:
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i){
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int max = arr[0];
    int min = arr[0];
    for (int i = 0; i < size; ++i){
        if (arr[i] < min) {
            min = arr[i];
        } else if (arr[i] > max){
            max = arr[i];
        }
    }
    int result = max + min;
    std::cout << "MAX + MIN = " << result;
    return 0;
}

6)Զանգվածի բոլոր էլեմենտները փոխարինել այդ էլեմենտի արժեքը բաժանած զանգվածում էլեմենտների քանակի վրա։
#include <iostream>

int main()
{
    double arr[100];
    int size = 0;

    do{
        std::cout << "enter the array size: ";
        std::cin >> size;
    }while(size < 1 || size > 100);
    
    for(int i = 0; i < size; ++i){
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    for (int i = 0; i < size; ++i) {
        arr[i] /= size;
        std::cout << arr[i] << " ";
    }
    return 0;
}

7)Գրեք ծրագիր,  որը օգտվողին թույլ կտա մուտքագրել նույն չափսի, երկու ամբողջ թվային զանգվածների էլեմենտների արժեքները և տպում է՝ համապատասխանող ինդեքսեներով էլեմնետների արտադրյալը էկրանին:
#include <iostream>

int main()
{
    const int size = 3;
    int arr1[size];
    int arr2[size];
    
    for(int i = 0; i < size; ++i){
        std::cout << "Enter the first array elemnets: ";
        std::cin >> arr1[i];
    }
    for(int i = 0; i < size; ++i){
        std::cout << "Enter the second array elemnets: ";
        std::cin >> arr2[i];
    }
    
    for (int i = 0; i < size; ++i) {
        std::cout << "mul = " << arr1[i] * arr2[i] << std::endl;
    }
    
    return 0;
}

8) array-i MIN u MAX mijin tvabanakan
#include <iostream>

int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i){
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int max = arr[0];
    int min = arr[0];
    for (int i = 0; i < size; ++i){
        if (arr[i] < min) {
            min = arr[i];
        } else if (arr[i] > max){
            max = arr[i];
        }
    }
    double result = (double)(max + min) / 2;// double result stanalu hamar petq e cast anel doublei
    std::cout << "mijin tvabanakany = " << result;
    return 0;
}

9) Գրեք ծրագիր,  որը օգտվողին թույլ կտա մուտքագրել char-երի զանգված և դուրս կբերի բոլոր թվերը:
#include <iostream>
int main()
{
    char str[] = "shd5252fgx";
    
    int j = 0;// nayum e arajin tarin i-n el e nayum arajin tarin ete amen handipox tarry tar e j++ enq anum 
    for (int i = 0; str[i]; ++i){ // str[i] != '\0'; '\0'-n = e 0; 0n boolean falsen e aysinqn str[i] = 0 nuyn str[i]
        if ((str[i] >= 'a' && str[j] <= 'z')||(str[i] <= 'A' && str[i] >= 'Z')){
            str[j] = str[i];
            ++j;
        }
    }
    str[j] = '\0';
    std::cout << str;
    
    return 0;
}

10) Գրեք ծրագիր,  որը օգտվողին թույլ կտա մուտքագրել char-երի զանգված և տողը վերածում է մեծատառի։
#include <iostream>
int main()
{
    char str[] = "shdfgx";
    for (int i = 0; str[i]; ++i){ // str[i] != '\0'; '\0'-n = e 0; 0n boolean falsen e aysinqn str[i] = 0 nuyn str[i]
        if (str[i] >= 'a' && str[i] <= 'z'){
            str[i] -= 32;
        }
    }
    std::cout << str;
    
    return 0;
}
11)Գրել ծրագիր, որը ստանում է ամբողջ թվային զանգված և թիվ։ Եթե զանգվածում առկա է տրված թիվը տպել YES, հակառակ դեպքում տպել NO։
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int num = 0;
    std::cout << "enter the find number: ";
    std::cin >> num;
    bool b = false;
    for (int i = 0; i < size; ++i) {
        if (arr[i] == num){
            b = true;
            break;
        }
    }
    
    if (num) {
        std::cout << "YES" << std::endl;
    } else {
        std::cout << "NO" << std::endl;
    }
    return 0;
}

12)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքները և տպում է այդ զանգավածի էլեմենտների միջին թվաբանականի արժեքը:
#include <iostream>

int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int result = 0;
    int sum = 0;
    for (int i = 0; i < size; ++i) {
        sum += arr[i];
        result = sum / 2;
    }
    std::cout << "the result: " << result;
    return 0;
}
13)Գրեք ծրագիր, որը օգտվողին թույլ կտա մուտքագրել ամբողջ թվային զանգվածի էլեմենտների արժեքերը և տպում է բոլոր էլեմենտների գումարը, արտադրյալը:
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elemnets: ";
        std::cin >> arr[i];
    }
    
    int sum = 0;
    for (int i = 0; i < size; ++i) {
        sum += arr[i];
    }
    
    int mul = 1;
    for (int i = 0; i < size; ++i) {
       mul *= arr[i];
    }
    std::cout << "the sum: " << sum << std::endl;
    std::cout << "the mul: " << mul;
    
    return 0;
}

14)Գրեք ծրագիր,  որը օգտվողին թույլ կտա մուտքագրել զանգվածի էլեմենտների արժեքները և տպում է դրանք հակառակ հերթականությամբ:
#include <iostream>
int main()
{
    int arr[100];
    int size = 0;

    do {
        std::cout << "enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);
    
    for (int i = 0; i < size; ++i) {
        std::cout << "enter the array elements: ";
        std::cin >> arr[i];
    }
    std::cout << std::endl;
    
    int begin = 0;
    int end = size - 1;
    while(begin < end) {
        int temp = arr[begin];
        arr[begin] = arr[end];
        arr[end] = temp;

    ++begin;
    --end;
    }
    std::cout << "Reversed array: " << std::endl;
    for(int i = 0; i < size; ++i){
        std::cout << arr[i] << " ";
    }
    
    return 0;
}
15)Գրել ֆունկցիա, որը ստանում է զանգված եւ ինդեքսի համար։ Ֆունկցիան հեռացնում է զանգվածի տրված ինդեքսով տարրը եւ վերադարձնում նոր զանգվածը որպես արդյունք։
#include <iostream>

int* remove_index(int*, int, int);

int main() {
    int size = 0;

    do {
        std::cout << "Enter the array size: ";
        std::cin >> size;
    } while (size < 1 || size > 100);

    int* arr = new int[size];
    for (int i = 0; i < size; ++i) {
        std::cout << "Enter the array elements: ";
        std::cin >> arr[i];
    }
    std::cout << std::endl;

    int index = 0;
    std::cout << "Enter the index to remove: ";
    std::cin >> index;

    int* arr_new = remove_index(arr, size, index);
    std::cout << "New array: " << std::endl;
    for (int i = 0; i < size - 1; ++i) {
        std::cout << arr_new[i] << " ";
    }
    std::cout << std::endl;
    
    delete[] arr_new;
    return 0;
}

int* remove_index(int* arr, int size, int index) {
    if (index < 0 || index >= size) {
        return nullptr;
    }
    
    int* arr_new = new int[size - 1];
    for (int i = 0; i < index; ++i) {
        arr_new[i] = arr[i];
    }

    int k = index + 1;
    for (int i = index; i < size - 1; ++i) {
        arr_new[i] = arr[k];
        ++k;
    }

    delete[] arr;
    arr = arr_new;
    arr_new  = nullptr;
    return arr;
}
