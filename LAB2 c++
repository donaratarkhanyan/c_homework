1)Գրել ֆունկցիա, որը ցուցիչների միջոցով փոխում է երկու ամբողջ թվային փոփոխականների արժեքները։
#include <iostream>
void swap(int* a, int* b){
    int tmp = *a;
    *a = *b;
    *b = tmp;
}
int main()
{
    int a = 8;
    int b = 1;
    swap(&a, &b);
    std::cout  << a << " " << b;

    return 0;
}

2)Հայտարարեք ցանկացած երեք տարբերվող տիպի ցուցիչներ: Արժեքավորեք ցուցիչները և տպեք էկրանին տվյալ ցուցիչների մեջ պահված հասցեները;
#include <iostream>
int main()
{
    int a = 7;
    double d = 4.3;
    short sh = 2;
    char ch = 'h';
    int* p_a = &a;
    double* p_d = &d;
    short* p_sh = &sh;
    char* p_ch = &ch;
    
    std::cout <<"Address int a = " <<  p_a << std::endl;
    std::cout <<"Address double d = " << p_d << std::endl;
    std::cout <<"Address short sh = " << p_sh << std::endl;
    std::cout <<"Address char ch = " << (void*)p_ch << std::endl;
    
    return 0;
}
3)Գրեք ծրագիր, որտեղ ցուցիչի մեջ պահված կլինի զանգվածի առաջին էլեմենտի հասցեն: Ցուցիչի օգնությամբ տպել զանգվածի տարրերը էկրանին։
#include <iostream>

int main()
{
    size_t size = 5;
    int arr[size] = {4,2,5,8,3};
    int* p_arr = arr;
    for(int i = 0; i < size; ++i){
        std::cout << *(p_arr + i) << " ";
    }
    return 0;
}

4)Հայտարարեք ցանկացած տիպի ցուցիչի և սկզբնավորեք այն NULL-ով։
#include <iostream>

int main()
{
    int* ptr = NULL;
    std::cout << ptr << std::endl;
    return 0;
}

5)Հայտարարել ամբողջ թվով փոփոխական և ցուցիչ: Ցուցիչին տվեք փոփոխականի հասցեն և ցուցիչի միջոցով տպեք փոփոխականի արժեքը:
#include <iostream>

int main()
{
    int a = 9;
    int* ptr = &a;
    *ptr = 7;
    std::cout << a << std::endl;
    return 0;
}
6)Հայտարարեք երկու ամբողջ թվով փոփոխական և երկու ցուցիչ: Ցուցիչներին վերագրեք փոփոխական հասցեներ և կատարեք թվաբանական գործողություններ (գումարում, հանում) օգտագործելով ցուցիչներ։
#include <iostream>

int main()
{
    int a = 9;
    int v = 4;
    int* ptr = &a;
    int* ptr_v = &v;
    
    std::cout << (*ptr) + (*ptr_v) << std::endl;
    std::cout << (*ptr) * (*ptr_v) << std::endl;
    std::cout << (*ptr) - (*ptr_v) << std::endl; 
    return 0;
}

7)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strlen() ֆունկցիային համարժեք ֆունկցիա:
#include <iostream>
int strlenn(char* str){
    int i = 0; 
    while(str[i] != '\0'){
        ++i;
    }
    return i;// kveradardzni toxi erkarutyuny
}
int main()
{
    char ch[] = "picsart";
    std::cout << strlenn(ch);
    return 0;
}

8)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strchr() ֆունկցիային համարժեք ֆունկցիա:
#include <iostream>
char* strchrr(char* str, char sym){
    while(*str != '\0'){
        if(*str == sym){
            return (char*)str;//gtnvac symbolic heto mnacacy kveradardzni,aysinqn cucichy knayi ayd symbolic sksac
        }
        ++str;
    }
    return (char*)str;//khasni \0 chi gtni symboly
}
int main()
{
    char ch[] = "Hayastan";
    std::cout << strchrr(ch, 'y');
    return 0;
}

9)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strcat() ֆունկցիային համարժեք ֆունկցիա:
#include <iostream>
char* strcatt(char* str1, const char* str2){
    char* s1 = str1;
    while(*s1 != '\0'){
        *s1++;
    }
    while(*str2){
        *s1 = *str2;
        s1++;
        str2++;
    }
    return str1;
}
int main()
{
    char ch[20] = "picsart";
    char ch2[20] = " academy!";
    std::cout << strcatt(ch, ch2);
    return 0;
}

10)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strcmp() ֆունկցիային համարժեք ֆունկցիա:
#include <iostream>
int strlenn(const char* ch){
    int i = 0;
    while(ch[i] != 0){
        ++i;
    }
    return i;
}
int strcmpp(const char* str1, const char* str2){
    int size1 = strlenn(str1);
    int size2 = strlenn(str2);
    if(size1 > size2){
        return 1;
    }
    else if(size1 < size2){
        return -1;
    }
    else{
        if(*str1 > *str2){
            return 1;
        }
        else if(*str1 < *str2){
            return -1;
        }
    }
    return 0;
}
int main()
{
    char ch[20];
    char ch2[20];
    std::cout << "Enter 2 word: ";
    std::cin >>  ch >> ch2;
    std::cout << strcmpp(ch, ch2);
    return 0;
}

11)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strstr() ֆունկցիային համարժեք ֆունկցիա:
#include <iostream>

char* strstrr(const char* str1, const char* str2){
    while(str1){
        const char* s1 = str1;
        const char* s2 = str2;
        while(*s1 && *s2 && (*s1 == *s2)){
            ++s1; 
            ++s2;
        }
        if(*s2 == '\0'){
                return (char*)str1;
        }
        ++str1;
    }
    return nullptr;
}

int main()
{
    char ch[20] = "hello dear jan";
    char ch2[20] = "dear";
    std::cout << strstrr(ch, ch2);
    return 0;
}
12)Իրականացնել string.h գրադարանային ֆայլի կողմից տրամադրվող strcpy() ֆունկցիային համարժեք ֆունկցիա։
#include <iostream>
char* strcpyy(char* str1, const char* str2){
    char* ptr = str1;
   
    while(*str2){
        *ptr = *str2;
        ++ptr;
        ++str2;
    }
    *ptr = '\0';
    
    return str1;
}

int main(){
    char str1[20] = "Hello";
    char str2[10] = " World!";
    strcpyy(str1, str2);
    std::cout << str1 << std::endl;
}

13)Իրականացնել ֆունկցիա, որը ստանում է զանգված և բուլիան արժեք վերադարձնող ֆունկցիայի ցուցիչ։ 
Ֆունկցիան զանգվածի բոլոր էլեմենտների վրա կանչում է ստացված ֆունկցիան։
#include <iostream>
bool n(int x){
    if (x % 2 == 0){
        return true;
    } else {
        return false;
    }
}
void foo(int* arr, int size, bool (*ptr)(int)){
    for(int i = 0; i < size; ++i){
        if (ptr(arr[i])){
            std::cout << arr[i] << "zuyg e" << std::endl;
        } else {
            std::cout << arr[i] << "kent e" << std::endl;
        }
    }
}
int main()
{
    int arr[5] = {1, 2, 3, 4, 5};
    foo(arr, 5, n);

    return 0;
}

14)Գրել void foo(int target, char c1, char c2, short sh) նախատիպով ֆունկցիան, որը c1, c2 և sh փոփոխականների արժեքները հերթականությամբ կտեղավորի target int տիպի փոփոխականի մեջ։
#include <iostream>

void change(int target, char ch, char ch2, short sh){
    int* ptr = &target;
    void* v = (void*)ptr;
    char* ch_p = (char*)v;
    *ch_p = ch;
    char* ch_p2 = (char*)v + 1;
    *ch_p2 = ch2;
    short* sh_p = (short*)v + 1;
    *sh_p = sh;
    std::cout << target;
}
int main()
{
    int i = 11;
    char ch = '\0';
    char ch2 = '\0';
    short sh = 0;
    change(i, ch, ch2, sh);

    return 0;
}

15)Իրականացնել հաշվիչ ծրագիր, որն օգտագործում է std::map և ֆունկցիայի ցուցիչներ։ Ֆունկցիայի ցուցիչները հղվում են համապատասխան թվաբանական գործողությունը կատարող ֆունկցիայի վրա։
#include <iostream>
#include <map>

int sum(int, int);
int sub(int, int);
int mul(int, int);
int divi(int, int);

int main()
{
    std::map<char, int (*)(int, int)> cal;
    cal['+'] = sum;
    cal['-'] = sub;
    cal['*'] = mul;
    cal['/'] = divi;

    char ch;
    int num1 = 0;
    int num2 = 0;
    std::cout << "Enter the expretion: ";
    std::cin >> num1 >> ch >> num2;
    std::cout << "Resalt: " << cal[ch](num1, num2) << std::endl;

    return 0;
}

int sum(int a, int b){
    return a + b;
}

int sub(int a, int b){
    return a - b;
}

int mul(int a, int b){
    return a * b;
}

int divi(int a, int b){
    if (b != 0){
        return a / b;
    }
    throw std::invalid_argument("0 chi kareli bajanel!!");
}
16)to upper, to lower
#include <iostream>
void to_upper(char* str){
    while(*str){
        *str ^= 32;
        ++str;
    }
}
int main()
{
    char str[20];
    std::cout << "Enter the string: ";
    std::cin >> str;
    to_upper(str);
    std::cout << str;
    return 0;
}
