1.Ստեղծել sym անունով char տիպի փոփոխական։ Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել sym անունով փոփոխականի արժեքը, 
որը լինելու է լատինական այբուբենի մեծատառ։ Տպել էկրանին մուտքագրված տառին համապատասխանող փոքրատառը։
#include <iostream>
int main()
{
    char  sym;
    do{
        std::cout << "Enter the letter: ";
        std::cin >> sym;
        
    }while(sym < 'A' || sym > 'Z');
    sym = sym + 32;
    std::cout << sym;
   return 0;
}

2. Ստեղծել sym անունով char տիպի փոփոխական։ Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել sym անունով փոփոխականի արժեքը։ 
Տպել էկրանին true եթե մուտքագրված սիմվոլը թվանշան է հակառակ դեպքում տպել false:
#include <iostream>
int main()
{
    char  sym;
    std::cout << "Enter the symbol: ";
    std::cin >> sym;
        
    if(sym > '0' && sym < '9'){
        std::cout << "true";
    }else{
        std::cout << "false";
    }
   return 0;
}

3.Գրել ծրագիր, որը թույլ կտա օգտվողին մուտքագրել թիվ, ստուգել և տպել՝ արդյոք թիվը զույգ է, թե կենտ:
#include <iostream>
int main()
{
    int num;
    std::cout << "Enter the number: ";
    std::cin >> num;
    if (num % 2 == 0) {
        std::cout << "zuyg";
    }else {
        std::cout << "kent";
    }
}

4.Գրել ծրագիր, որը թույլ կտա օգտվողին մուտքագրել տառ, ստուգել և տպել տառը բաղաձայն է, թե ձայնավոր:
#include <iostream>
int main()
{
    char ch;
    do {
        std::cout << "Enter the letter: ";
        std::cin >> ch;
    } while ((ch < 'A' || ch > 'Z') && (ch < 'a' || ch > 'z'));
    if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'|| ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')
    {
        std::cout << ch << " is a dzayavor";
        
    }else {
        std::cout << ch << " is a baghadzyn";
        
    }
}

5.Գրել ծրագիր, որը թույլ կտա օգտվողին մուտքագրել երկու թիվ, ստուգել և տպել դրանցից ամենամեծը:
#include <iostream>
int main()
{
    int a;
    int b;
    std::cout << "Enter the first number: ";
    std::cin >> a;
    std::cout << "Enter the second number: ";
    std::cin >> b;
    
    if (a > b){
        std::cout << a;
    }else {
        std::cout << b;
    }
    
}

6.Գրել ծրագիր, որը թույլ կտա օգտվողին մուտքագրել երեք թվեր, եթե երեք թվերից 2-ը հավասար են՝ տպել այդ երեք թվերից ամենամեծը։
#include <iostream>
int main()
{
    int a, b, c;
    std::cout << "Enter the three numbers: ";
    std::cin >> a >> b >> c;
    
    if (a == b && a == c){
        std::cout << "3n el irar havasar en!";
    }else if (a >= b && a >= c) {
        std::cout << "mecy = " << a;
    }else if (b >= a && b >= c) {
        std::cout << "mecy = " << b;
    }else {
        std::cout << "mecy = " << c;
    }
}

7.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել չորս թիվ, եթե այդ թվերի գումարը հավասար է 0-ի՝ տպել նրանցից ամենափոքրը։
#include <iostream>

int main()
{
    int num1 = 0;
    int num2 = 0;
    int num3 = 0;
    int num4 = 0;
    std::cout << "Enter  the 4 numbers: ";
    std::cin >> num1 >> num2 >> num3 >> num4;
    if((num1 + num2 + num3 + num4) == 0){
        if ((num1 < num2) && (num1 < num3) && (num1 < num4)){
            std::cout << num1;
        }else if ((num2 < num1) && (num2 < num3) && (num2 < num4)){
            std::cout << num2;
        }else if ((num3 < num1) && (num3 < num2) && (num3 < num4)){
            std::cout << num3;
        }else if ((num4 < num1) && (num4 < num3) && (num4 < num2)){
                std::cout << num4;
                
            }
    }else{
        std::cout << "false";
    }
}

8.Գրել ծրագիր, որը օգտվողին թույլ է տալիս մուտքագրել տարի, ստուգում և տպում է տարին նահանջ է, թե ոչ:
#include <iostream>
int main()
{
    int year = 0;
    std::cout << "Enter the year: ";
    std::cin >> year;
    
    if(year % 4 == 0){
        std::cout << year << " nahanj tari e !!!";
    }else{
        std::cout << year << " nahanj tari chi !!!";
    }
    
}

9.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել երկու սիմվոլները, ստուգեք արդյոք սիմվոլները արտահայտում են նույն տառի մեծատառ և փոքրատառ տեսքերը, թե ոչ։
1տարբերակ
#include <iostream>
int main()
{
    char ch1;
    char ch2;
    std::cout << "Enter two charecter: ";
    std::cin >> ch1 >> ch2;
    if((ch1 == (ch2 + 32)) || (ch2 == (ch1 - 32))){
        std::cout << "Yes";
    }else if((ch1 == (ch2 - 32)) || (ch2 == (ch1 + 32))){
        std::cout << "Yes";
    }else
        std::cout << "No";
    return 0;
}

2տարբերակ
#include <iostream>
#include <cctype> // for toupper and tolower functions

int main() {
    char symbol1, symbol2;

    // Input symbols from the user
    std::cout << "Enter the first symbol: ";
    std::cin >> symbol1;
    std::cout << "Enter the second symbol: ";
    std::cin >> symbol2;

    // Convert the symbols to uppercase and lowercase
    char upper1 = toupper(symbol1);
    char upper2 = toupper(symbol2);
    char lower1 = tolower(symbol1);
    char lower2 = tolower(symbol2);

    // Check if the symbols represent the same letter
    if (upper1 == upper2 || lower1 == lower2) {
        std::cout << "The symbols represent the same letter." << std::endl;
    } else {
        std::cout << "The symbols do not represent the same letter." << std::endl;
    }

    return 0;
}

10. Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել թիվ, և հաշվել նրա ֆակտորիալը:
#include <iostream>
int main()
{
    int ArSize = 0;
    std::cin >> ArSize;
    long factorials[ArSize];
    factorials[1] = factorials[0] = 1L;
    for (int i = 2; i < ArSize; i++)
    factorials[i] = i * factorials[i-1];
    for (int i = 0; i < ArSize; i++)
    std::cout << i << "! = " << factorials[i] << std::endl;
    return 0;
}

12.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել թիվ և հաշվել այդ թվի թվանշանների գումարը։
#include <iostream>
int main()
{
    int number = 0;
    int digit; 
    int sum;
    
    std::cout << "Enter the number: ";
    std::cin >> number;
    
    while(number > 0){
        digit = number % 10;
        sum += digit;
        number /= 10;
    }
    std::cout << "The sum of the digits is: " << sum << std::endl;
}

13.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել թիվ և էկրանին տպել մուտքագրված թվի reverse տարբերակը (Օր․՝ 1234 -> 4321)։
#include <iostream>
int main()
{
    int number;
    int rev;
    
    std::cout << "Enter the number: ";
    std::cin >> number;
    
    while(number){
        int digit = number % 10;
        rev = rev * 10 + digit;
        number /= 10;
    }
    std::cout << "Rverse: " << rev << std::endl;
}

FUNCTION
#include <iostream>

int reverse_digit(int number) {
    int rev = 0;
    
    while (number) {
        int digit = number % 10;
        rev = rev * 10 + digit;
        number /= 10;
    }
    
    return rev;
}
	
int main(){
int num = 0; 
std::cout << "enter the number: ";
std::cin >> num;
int rev_num =  reverse_digit(num);
std::cout << "Reversed: " << rev_num << std::endl;

}
14.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել թիվ և պարզել արդյո՞ք թիվը պարզ է, թե ոչ։
#include <iostream>
int main(){
    int num;
    bool parz;
    std::cout << "enter the number: ";
    std::cin >> num;
    
    for (int i = 2; i < num; i++)
    {
      if(num % i == 0)
      {
          parz = false;
          break;
      }
      else
          parz = true;
    }
    
    if (parz) {
        std::cout << num << " is a prime number." << std::endl;
    } else {
        std::cout << num << " is not a prime number." << std::endl;
    }
}
2RD TARBERAK FUNCTION
#include <iostream>

bool isPrime(int a){
    bool b = true;
    for (int i = 2; i <= a / 2; ++i){
        if (a % i == 0){
            return false;
        }
    }
    return true;
}

int main()
{
    int num = 0;
    std::cout << "Enter the number: ";
    std::cin >> num;
    if(isPrime(num)){
        std::cout << num << " is prime! ";    
    }
    else
    {
        std::cout << num << " is not prime! ";
    }
        
    return 0;
}

15.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել թիվ և պարզել արդյո՞ք թիվը 3֊ի աստիճան է, թե ոչ։
#include <iostream>
int main()
{
   int num;
    std::cout << "Enter a number: ";
    std::cin >> num;

    if (num <= 0) {
        std::cout << num << " is not a power of 3." << std::endl;
    } else {
        while (num % 3 == 0) {
            num /= 3;
        }
        
        if (num == 1) {
            std::cout << "The entered number is a power of 3." << std::endl;
        } else {
            std::cout << "The entered number is not a power of 3." << std::endl;
        }
    }

    return 0;

}

17.Գրել ծրագիր, որը օգտվողին թույլ կտա մուտքագրել 0-ից 7 թվերից որևէ մեկը, և տպել էկրանին մուտքագրված թվին համապատասխանող շաբաթվա օրը։
#include <iostream>
int main()
{
    int num;
    std::cout << "Enter the number: ";
    std::cin >> num;
    
    switch(num){
        case 1:
        std::cout << "erkushabti";
        break;
        case 2:
        std::cout << "ereqshabti";
        break;
        case 3:
        std::cout << "choreqshabti";
        break;
        case 4:
        std::cout << "hingshabti";
        break;
        case 5:
        std::cout << "urbat";
        break;
        case 6:
        std::cout << "shabat";
        break;
        case 7:
        std::cout << "kiraki";
        break;
        default:
        std::cout << "false";
        break;
    }
   return 0;
}

18.Palindrome
#include <iostream>
#include <cstring>

std::string isPalindrome(std::string S)
{
    for (int i = 0; i < S.length() / 2; i++) {
        if (S[i] != S[S.length() - i - 1]) {
            return "No palindrome";
        }
    }
    return "Yes palindrome";
}
int main()
{
    std::string S;
    std::cin >> S;
    std::cout << isPalindrome(S);
 
    return 0;
}

19. Palindrome array
#include <iostream>

int palindrome(int* ptr, int size){
	for(int i = 0; i < size / 2; ++i){
		if(ptr[i] != ptr[size - i - 1]){
			return 0;
		}
	}
	return 1;	

}
int main()
{
int size = 0;
std::cout << "Enter the array size: ";
std::cin >> size;
int* arr = new int[size];

for(int i = 0; i < size; ++i){
	std::cout << "Enter the array elements: ";
	std::cin >> arr[i];
}

if(palindrome(arr, size)){
	std::cout << "yes palindrome!\n";
}
else{
	std::cout << "Not palindrome!\n";
}
}
20. palindrome vector
#include <iostream>
#include <vector>

std::vector <int> v(int num){
	std::vector <int> v_2;
	while(num){
		int digit = num % 10;
		num /= 10;
		v_2.push_back(digit);
	}
	return v_2;
}
	
bool palind (std::vector <int> v_2){
	for(int i = 0; i < v_2.size() / 2; ++i){
		if(v_2[i] != v_2[v_2.size() - i - 1]){
			return false;
		}
	}
	return true;
}

int main(){

std::vector <int> vec;
int x = 0;
std::cout << "enter the number: ";
std::cin >> x;
vec = v(x);
if(palind(vec)){
	std::cout << "palindrome!\n";
}else{
	std::cout << "not palindrome!\n";
}

}

21. palindrome number function
#include <iostream>

bool palid_num(int num){
	int x = num;
	int rev_num = 0;
	while(num){
		int digit = num % 10;
		rev_num = rev_num * 10 + digit;
		num /= 10;
	}
	return x == rev_num;
}

int main(){
int number = 0;
std::cout << "Enter the number: ";
std::cin >> number;
if(palid_num(number)){
	std::cout << number << " palndrome!\n";
}else{
	std::cout << number << " not palindrome!\n";
}
}
